{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/About.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","console","log","mode","react_default","a","createElement","className","concat","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TestForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","About","myStyle","aria-labelledby","data-bs-parent","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalise","msg","data-bs-dismiss","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","react_router_dom","body","key","Date","component_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a8012e5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    console.log(props.mode);\r\n    const theme = props.mode;\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/*<Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        {/*<li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>*/}\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };               ","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TestForm(props) {\r\n  const handleUpClick =()=>{\r\n   // console.log(\"Upper Case was Clicked\"+text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Upper Case!\",\"success\");\r\n    \r\n  }\r\n  const handleLoClick =()=>{\r\n    // console.log(\"Upper Case was Clicked\"+text);\r\n     let newText=text.toLowerCase();\r\n     setText(newText);\r\n     props.showAlert(\"Converted to Lower Case!\",\"success\");\r\n    \r\n     \r\n   }\r\n  const handledOnChange =(event)=>{\r\n   // console.log(\"On change\");\r\n    setText(event.target.value);\r\n   \r\n   \r\n  }\r\n  const handleCopy=()=>{\r\n    console.log(\"I am Copy\");\r\n    var test = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0,9999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"TextCopied to ClipBoard!\",\"success\");\r\n  }\r\n  const handleExtraSpaces=()=>{\r\n    let newText=text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n  }\r\n  const[text, setText] = useState('');\r\n  //text=\"new text\"; wrong way\r\n  //setText(\"new text\"); correct way\r\n  return (\r\n    \r\n      <>\r\n  <div className=\"container\" style={{color:'dark'?'white':'#042743'}} >\r\n      <h1> {props.heading} </h1>\r\n      <div  className=\"mb-3\">\r\n    \r\n    <textarea  className=\"form-control\" value = {text} onChange={handledOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'#13466e',color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"10\"></textarea>\r\n      </div>\r\n      <button  className=\"btn btn-primary mx-2\" onClick={handleUpClick}  >Conver to Upper Case</button>\r\n      <button  className=\"btn btn-primary\" onClick={handleLoClick}  >Conver to Lower Case</button>\r\n      <button  className=\"btn btn-primary mx-2\" onClick={handleCopy}  >Copy Text</button>\r\n      <button  className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}  >Remove Extra Spaces</button>\r\n      \r\n      \r\n    </div>\r\n    <div className=\"container my-10\"  style={{color:'dark'?'white':'#042743'}} >\r\n      <h2>\r\n        Your text summary\r\n      </h2>\r\n      <p> {text.split(\" \").length} words and {text.length} character</p>\r\n      <p> {0.008*text.split(\" \").length} Minutes Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter Sometthing to prview here\"}</p>\r\n    </div>\r\n    </> \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMyStyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // }) \r\n    let myStyle = {\r\n        color: props.mode ==='dark'?'white':'#042743',\r\n        backgroundColor: props.mode =='dark'?'rgb(36 74 104)':'white', \r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" style={{color: props.mode ==='dark'?'white':'#042743'}}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    <strong>Analyze Your text </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                    Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or \r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>Free to use </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                    TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    <strong>Browser Compatible </strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                    This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalise=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n\r\n    }\r\n  return (\r\n    props.alert&& <div className={`alert alert-${`props.aler.type`} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalise(props.alert.type)}</strong> :{props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport About from './component/About';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          </Route>\n    </Switch>\n    </div>\n    </Router>\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}